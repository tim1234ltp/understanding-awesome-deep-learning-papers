Show, Attend and Tell: Neural Image Caption Generation with Visual Attention

arXiv:1502.03044v3 [cs.LG] 19 Apr 2016

Kelvin Xu Jimmy Lei Ba Ryan Kiros Kyunghyun Cho Aaron Courville Ruslan Salakhutdinov Richard S. Zemel Yoshua Bengio

KELVIN.XU@UMONTREAL.CA JIMMY@PSI.UTORONTO.CA RKIROS@CS.TORONTO.EDU
KYUNGHYUN.CHO@UMONTREAL.CA AARON.COURVILLE@UMONTREAL.CA
RSALAKHU@CS.TORONTO.EDU ZEMEL@CS.TORONTO.EDU FIND-ME@THE.WEB

Abstract
Inspired by recent work in machine translation and object detection, we introduce an attention based model that automatically learns to describe the content of images. We describe how we can train this model in a deterministic manner using standard backpropagation techniques and stochastically by maximizing a variational lower bound. We also show through visualization how the model is able to automatically learn to fix its gaze on salient objects while generating the corresponding words in the output sequence. We validate the use of attention with state-of-theart performance on three benchmark datasets: Flickr8k, Flickr30k and MS COCO.
1. Introduction
Automatically generating captions of an image is a task very close to the heart of scene understanding -- one of the primary goals of computer vision. Not only must caption generation models be powerful enough to solve the computer vision challenges of determining which objects are in an image, but they must also be capable of capturing and expressing their relationships in a natural language. For this reason, caption generation has long been viewed as a difficult problem. It is a very important challenge for machine learning algorithms, as it amounts to mimicking the remarkable human ability to compress huge amounts of salient visual infomation into descriptive language.
Despite the challenging nature of this task, there has been a recent surge of research interest in attacking the image caption generation problem. Aided by advances in training neural networks (Krizhevsky et al., 2012) and large classification datasets (Russakovsky et al., 2014), recent work

Figure 1. Our model learns a words/image alignment. The visualized attentional maps (3) are explained in section 3.1 & 5.4

1. Input Image

14x14 Feature Map
LSTM
2. Convolutional 3. RNN with attention Feature Extraction over the image

A bird flying over a body of water 4. Word by word generation

has significantly improved the quality of caption generation using a combination of convolutional neural networks (convnets) to obtain vectorial representation of images and recurrent neural networks to decode those representations into natural language sentences (see Sec. 2).
One of the most curious facets of the human visual system is the presence of attention (Rensink, 2000; Corbetta & Shulman, 2002). Rather than compress an entire image into a static representation, attention allows for salient features to dynamically come to the forefront as needed. This is especially important when there is a lot of clutter in an image. Using representations (such as those from the top layer of a convnet) that distill information in image down to the most salient objects is one effective solution that has been widely adopted in previous work. Unfortunately, this has one potential drawback of losing information which could be useful for richer, more descriptive captions. Using more low-level representation can help preserve this information. However working with these features necessitates a powerful mechanism to steer the model to information important to the task at hand.
In this paper, we describe approaches to caption generation that attempt to incorporate a form of attention with

Neural Image Caption Generation with Visual Attention Figure 2. Attention over time. As the model generates each word, its attention changes to reflect the relevant parts of the image. "soft" (top row) vs "hard" (bottom row) attention. (Note that both models generated the same captions in this example.)
Figure 3. Examples of attending to the correct object (white indicates the attended regions, underlines indicated the corresponding word)

two variants: a "hard" attention mechanism and a "soft" attention mechanism. We also show how one advantage of including attention is the ability to visualize what the model "sees". Encouraged by recent advances in caption generation and inspired by recent success in employing attention in machine translation (Bahdanau et al., 2014) and object recognition (Ba et al., 2014; Mnih et al., 2014), we investigate models that can attend to salient part of an image while generating its caption.
The contributions of this paper are the following:
· We introduce two attention-based image caption generators under a common framework (Sec. 3.1): 1) a "soft" deterministic attention mechanism trainable by standard back-propagation methods and 2) a "hard" stochastic attention mechanism trainable by maximizing an approximate variational lower bound or equivalently by REINFORCE (Williams, 1992).
· We show how we can gain insight and interpret the results of this framework by visualizing "where" and "what" the attention focused on. (see Sec. 5.4)
· Finally, we quantitatively validate the usefulness of attention in caption generation with state of the art performance (Sec. 5.3) on three benchmark datasets: Flickr8k (Hodosh et al., 2013) , Flickr30k (Young et al., 2014) and the MS COCO dataset (Lin et al., 2014).

2. Related Work
In this section we provide relevant background on previous work on image caption generation and attention. Recently, several methods have been proposed for generating image descriptions. Many of these methods are based on recurrent neural networks and inspired by the successful use of sequence to sequence training with neural networks for machine translation (Cho et al., 2014; Bahdanau et al., 2014; Sutskever et al., 2014). One major reason image caption generation is well suited to the encoder-decoder framework (Cho et al., 2014) of machine translation is because it is analogous to "translating" an image to a sentence.
The first approach to use neural networks for caption generation was Kiros et al. (2014a), who proposed a multimodal log-bilinear model that was biased by features from the image. This work was later followed by Kiros et al. (2014b) whose method was designed to explicitly allow a natural way of doing both ranking and generation. Mao et al. (2014) took a similar approach to generation but replaced a feed-forward neural language model with a recurrent one. Both Vinyals et al. (2014) and Donahue et al. (2014) use LSTM RNNs for their models. Unlike Kiros et al. (2014a) and Mao et al. (2014) whose models see the image at each time step of the output word sequence, Vinyals et al. (2014) only show the image to the RNN at the beginning. Along

Neural Image Caption Generation with Visual Attention

with images, Donahue et al. (2014) also apply LSTMs to videos, allowing their model to generate video descriptions.
All of these works represent images as a single feature vector from the top layer of a pre-trained convolutional network. Karpathy & Li (2014) instead proposed to learn a joint embedding space for ranking and generation whose model learns to score sentence and image similarity as a function of R-CNN object detections with outputs of a bidirectional RNN. Fang et al. (2014) proposed a three-step pipeline for generation by incorporating object detections. Their model first learn detectors for several visual concepts based on a multi-instance learning framework. A language model trained on captions was then applied to the detector outputs, followed by rescoring from a joint image-text embedding space. Unlike these models, our proposed attention framework does not explicitly use object detectors but instead learns latent alignments from scratch. This allows our model to go beyond "objectness" and learn to attend to abstract concepts.
Prior to the use of neural networks for generating captions, two main approaches were dominant. The first involved generating caption templates which were filled in based on the results of object detections and attribute discovery (Kulkarni et al. (2013), Li et al. (2011), Yang et al. (2011), Mitchell et al. (2012), Elliott & Keller (2013)). The second approach was based on first retrieving similar captioned images from a large database then modifying these retrieved captions to fit the query (Kuznetsova et al., 2012; 2014). These approaches typically involved an intermediate "generalization" step to remove the specifics of a caption that are only relevant to the retrieved image, such as the name of a city. Both of these approaches have since fallen out of favour to the now dominant neural network methods.
There has been a long line of previous work incorporating attention into neural networks for vision related tasks. Some that share the same spirit as our work include Larochelle & Hinton (2010); Denil et al. (2012); Tang et al. (2014). In particular however, our work directly extends the work of Bahdanau et al. (2014); Mnih et al. (2014); Ba et al. (2014).
3. Image Caption Generation with Attention Mechanism
3.1. Model Details
In this section, we describe the two variants of our attention-based model by first describing their common framework. The main difference is the definition of the  function which we describe in detail in Section 4. We denote vectors with bolded font and matrices with capital letters. In our description below, we suppress bias terms for readability.

zt ht-1

Eyt-1

zt ht-1

Eyt-1

ht-1 zt
Eyt-1

i
input gate
c
input modulator

o
output gate
ht
memory cell

f
forget gate

ht-1 zt

Eyt-1

Figure 4. A LSTM cell, lines with bolded squares imply projections with a learnt weight vector. Each cell learns how to weigh its input components (input gate), while learning how to modulate that contribution to the memory (input modulator). It also learns weights which erase the memory cell (forget gate), and weights which control how this memory should be emitted (output gate).

3.1.1. ENCODER: CONVOLUTIONAL FEATURES
Our model takes a single raw image and generates a caption y encoded as a sequence of 1-of-K encoded words.
y = {y1, . . . , yC } , yi  RK
where K is the size of the vocabulary and C is the length of the caption.
We use a convolutional neural network in order to extract a set of feature vectors which we refer to as annotation vectors. The extractor produces L vectors, each of which is a D-dimensional representation corresponding to a part of the image.
a = {a1, . . . , aL} , ai  RD
In order to obtain a correspondence between the feature vectors and portions of the 2-D image, we extract features from a lower convolutional layer unlike previous work which instead used a fully connected layer. This allows the decoder to selectively focus on certain parts of an image by selecting a subset of all the feature vectors.

3.1.2. DECODER: LONG SHORT-TERM MEMORY NETWORK
We use a long short-term memory (LSTM) network (Hochreiter & Schmidhuber, 1997) that produces a caption by generating one word at every time step conditioned on a context vector, the previous hidden state and the previously generated words. Our implementation of LSTM

Neural Image Caption Generation with Visual Attention

closely follows the one used in Zaremba et al. (2014) (see Fig. 4). Using Ts,t : Rs  Rt to denote a simple affine
transformation with parameters that are learned,

 it 
 ft  ot
gt

=





 



 

tanh

TD+m+n,n

Eyt-1  ht-1 
z^t

(1)

ct = ft ct-1 + it gt

(2)

ht = ot tanh(ct).

(3)

Here, it, ft, ct, ot, ht are the input, forget, memory, output and hidden state of the LSTM, respectively. The vector z^  RD is the context vector, capturing the visual information associated with a particular input location, as explained below. E  Rm×K is an embedding matrix. Let m and n denote the embedding and LSTM dimensionality respectively and  and be the logistic sigmoid activation and element-wise multiplication respectively.
In simple terms, the context vector z^t (equations (1)­(3)) is a dynamic representation of the relevant part of the image input at time t. We define a mechanism  that computes z^t from the annotation vectors ai, i = 1, . . . , L corresponding to the features extracted at different image locations. For each location i, the mechanism generates a positive weight i which can be interpreted either as the probability that location i is the right place to focus for producing the next word (the "hard" but stochastic attention mechanism), or as the relative importance to give to location i in blending the ai's together. The weight i of each annotation vector ai is computed by an attention model fatt for which we use a multilayer perceptron conditioned on the previous hidden state ht-1. The soft version of this attention mechanism was introduced by Bahdanau et al. (2014). For emphasis, we note that the hidden state varies as the output RNN advances in its output sequence: "where" the network looks next depends on the sequence of words that has already been generated.

eti =fatt(ai, ht-1)

(4)

ti =

exp(eti)

L k=1

exp(etk

)

.

(5)

Once the weights (which sum to one) are computed, the context vector z^t is computed by

z^t =  ({ai} , {i}) ,

(6)

where  is a function that returns a single vector given the set of annotation vectors and their corresponding weights. The details of  function are discussed in Sec. 4.

The initial memory state and hidden state of the LSTM are predicted by an average of the annotation vectors fed

through two separate MLPs (init,c and init,h):

1L

c0 = finit,c( L

ai)

i

1L

h0 = finit,h( L

ai)

i

In this work, we use a deep output layer (Pascanu et al., 2014) to compute the output word probability given the LSTM state, the context vector and the previous word:
p(yt|a, y1t-1)  exp(Lo(Eyt-1 + Lhht + Lzz^t)) (7)

Where Lo  RK×m, Lh  Rm×n, Lz  Rm×D, and E are learned parameters initialized randomly.

4. Learning Stochastic "Hard" vs Deterministic "Soft" Attention
In this section we discuss two alternative mechanisms for the attention model fatt: stochastic attention and deterministic attention.

4.1. Stochastic "Hard" Attention

We represent the location variable st as where the model decides to focus attention when generating the tth word. st,i is an indicator one-hot variable which is set to 1 if the i-th location (out of L) is the one used to extract visual
features. By treating the attention locations as intermedi-
ate latent variables, we can assign a multinoulli distribution parametrized by {i}, and view z^t as a random variable:

p(st,i = 1 | sj<t, a) = t,i

(8)

z^t = st,iai.

(9)

i

We define a new objective function Ls that is a variational lower bound on the marginal log-likelihood log p(y | a) of observing the sequence of words y given image features a. The learning algorithm for the parameters W of the models can be derived by directly optimizing Ls:

Ls = p(s | a) log p(y | s, a)
s

 log p(s | a)p(y | s, a)

s

= log p(y | a)

(10)

Ls =

 log p(y | s, a)

p(s | a)

+

W

W

s

 log p(s | a)

log p(y | s, a)

. (11)

W

Neural Image Caption Generation with Visual Attention Figure 5. Examples of mistakes where we can use attention to gain intuition into what the model saw.

Equation 11 suggests a Monte Carlo based sampling approximation of the gradient with respect to the model parameters. This can be done by sampling the location st from a multinouilli distribution defined by Equation 8.
s~t  MultinoulliL({i})

Ls  1 N

 log p(y | s~n, a) +

W N

W

n=1

log

p(y

|

s~n,

 a)

log

p(s~n

|

a)

(12)

W

A moving average baseline is used to reduce the variance in the Monte Carlo estimator of the gradient, following Weaver & Tao (2001). Similar, but more complicated variance reduction techniques have previously been used by Mnih et al. (2014) and Ba et al. (2014). Upon seeing the kth mini-batch, the moving average baseline is estimated as an accumulated sum of the previous log likelihoods with exponential decay:

bk = 0.9 × bk-1 + 0.1 × log p(y | s~k, a)

To further reduce the estimator variance, an entropy term on the multinouilli distribution H[s] is added. Also, with probability 0.5 for a given image, we set the sampled attention location s~ to its expected value . Both techniques improve the robustness of the stochastic attention learning algorithm. The final learning rule for the model is then the

following:

Ls  1 N

 log p(y | s~n, a) +

W N

W

n=1

r (log

p(y

|

s~n,

a)

-

 b)

log p(s~n W

|

a)

+

e

 H [s~n ] W

where, r and e are two hyper-parameters set by crossvalidation. As pointed out and used in Ba et al. (2014) and Mnih et al. (2014), this is formulation is equivalent to the REINFORCE learning rule (Williams, 1992), where the reward for the attention choosing a sequence of actions is a real value proportional to the log likelihood of the target sentence under the sampled attention trajectory.

In making a hard choice at every point,  ({ai} , {i}) from Equation 6 is a function that returns a sampled ai at every point in time based upon a multinouilli distribution parameterized by .

4.2. Deterministic "Soft" Attention

Learning stochastic attention requires sampling the attention location st each time, instead we can take the expectation of the context vector z^t directly,

L
Ep(st|a)[z^t] = t,iai
i=1

(13)

and formulate a deterministic attention model by com-

puting a soft attention weighted annotation vector

 ({ai} , {i}) =

L i

iai

as

introduced

by

Bahdanau

et al. (2014). This corresponds to feeding in a soft 

Neural Image Caption Generation with Visual Attention

weighted context into the system. The whole model is smooth and differentiable under the deterministic attention, so learning end-to-end is trivial by using standard backpropagation.

Learning the deterministic attention can also be under-
stood as approximately optimizing the marginal likelihood
in Equation 10 under the attention location random vari-
able st from Sec. 4.1. The hidden activation of LSTM ht is a linear projection of the stochastic context vector z^t followed by tanh non-linearity. To the first order Taylor approximation, the expected value Ep(st|a)[ht] is equal to computing ht using a single forward prop with the expected context vector Ep(st|a)[z^t]. Considering Eq. 7, let nt = Lo(Eyt-1 +Lhht +Lzz^t), nt,i denotes nt computed by setting the random variable z^ value to ai. We define the normalized weighted geometric mean for the softmax kth
word prediction:

N W GM [p(yt = k | a)] = =

i exp(nt,k,i)p(st,i=1|a) j i exp(nt,j,i)p(st,i=1|a)
exp(Ep(st |a) [nt,k ]) j exp(Ep(st|a)[nt,j ])

The equation above shows the normalized weighted geometric mean of the caption prediction can be approximated well by using the expected context vector, where E[nt] = Lo(Eyt-1 + LhE[ht] + LzE[z^t]). It shows that the NWGM of a softmax unit is obtained by applying softmax to the expectations of the underlying linear projections. Also, from the results in (Baldi & Sadowski, 2014), N W GM [p(yt = k | a)]  E[p(yt = k | a)] under softmax activation. That means the expectation of the outputs over all possible attention locations induced by random variable st is computed by simple feedforward propagation with expected context vector E[z^t]. In other words, the deterministic attention model is an approximation to the marginal likelihood over the attention locations.

4.2.1. DOUBLY STOCHASTIC ATTENTION

By construction, i ti = 1 as they are the output of a softmax. In training the deterministic version of our model

we introduce a form of doubly stochastic regularization,

where we also encourage t ti  1. This can be interpreted as encouraging the model to pay equal attention

to every part of the image over the course of generation. In

our experiments, we observed that this penalty was impor-

tant quantitatively to improving overall BLEU score and

that qualitatively this leads to more rich and descriptive

captions. In addition, the soft attention model predicts a

gating scalar  from previous hidden state ht-1 at each

time step t, such that,  ({ai} , {i}) = 

L i

iai,

where

t = (f(ht-1)). We notice our attention weights put

more emphasis on the objects in the images by including

the scalar .

Concretely, the model is trained end-to-end by minimizing the following penalized negative log-likelihood:

L

C

Ld = - log(P (y|x)) +  (1 - ti)2 (14)

i

t

4.3. Training Procedure
Both variants of our attention model were trained with stochastic gradient descent using adaptive learning rate algorithms. For the Flickr8k dataset, we found that RMSProp (Tieleman & Hinton, 2012) worked best, while for Flickr30k/MS COCO dataset we used the recently proposed Adam algorithm (Kingma & Ba, 2014) .
To create the annotations ai used by our decoder, we used the Oxford VGGnet (Simonyan & Zisserman, 2014) pretrained on ImageNet without finetuning. In principle however, any encoding function could be used. In addition, with enough data, we could also train the encoder from scratch (or fine-tune) with the rest of the model. In our experiments we use the 14×14×512 feature map of the fourth convolutional layer before max pooling. This means our decoder operates on the flattened 196 × 512 (i.e L × D) encoding.
As our implementation requires time proportional to the length of the longest sentence per update, we found training on a random group of captions to be computationally wasteful. To mitigate this problem, in preprocessing we build a dictionary mapping the length of a sentence to the corresponding subset of captions. Then, during training we randomly sample a length and retrieve a mini-batch of size 64 of that length. We found that this greatly improved convergence speed with no noticeable diminishment in performance. On our largest dataset (MS COCO), our soft attention model took less than 3 days to train on an NVIDIA Titan Black GPU.
In addition to dropout (Srivastava et al., 2014), the only other regularization strategy we used was early stopping on BLEU score. We observed a breakdown in correlation between the validation set log-likelihood and BLEU in the later stages of training during our experiments. Since BLEU is the most commonly reported metric, we used BLEU on our validation set for model selection.
In our experiments with soft attention, we also used Whetlab1 (Snoek et al., 2012; 2014) in our Flickr8k experiments. Some of the intuitions we gained from hyperparameter regions it explored were especially important in our Flickr30k and COCO experiments.
We make our code for these models based in Theano
1https://www.whetlab.com/

Neural Image Caption Generation with Visual Attention

Table 1. BLEU-1,2,3,4/METEOR metrics compared to other methods,  indicates a different split, (--) indicates an unknown metric,  indicates the authors kindly provided missing metrics by personal communication,  indicates an ensemble, a indicates using AlexNet

Dataset Flickr8k Flickr30k
COCO

Model Google NIC(Vinyals et al., 2014) Log Bilinear (Kiros et al., 2014a)
Soft-Attention
Hard-Attention Google NIC
Log Bilinear
Soft-Attention
Hard-Attention CMU/MS Research (Chen & Zitnick, 2014)a
MS Research (Fang et al., 2014)a BRNN (Karpathy & Li, 2014) Google NIC Log Bilinear
Soft-Attention
Hard-Attention

BLEU-1 63 65.6 67 67 66.3 60.0 66.7 66.9 -- -- 64.2 66.6 70.8 70.7 71.8

BLEU

BLEU-2 BLEU-3

41

27

42.4

27.7

44.8

29.9

45.7

31.4

42.3

27.7

38

25.4

43.4

28.8

43.9

29.6

--

--

--

--

45.1

30.4

46.1

32.9

48.9

34.4

49.2

34.4

50.4

35.7

BLEU-4 -- 17.7 19.5 21.3 18.3 17.1 19.1 19.9 -- -- 20.3 24.6 24.3 24.3 25.0

METEOR --
17.31 18.93 20.30
-- 16.88 18.49 18.46 20.41 20.71
-- -- 20.03 23.90 23.04

(Bergstra et al., 2010) publicly available upon publication to encourage future research in this area.
5. Experiments
We describe our experimental methodology and quantitative results which validate the effectiveness of our model for caption generation.
5.1. Data
We report results on the popular Flickr8k and Flickr30k dataset which has 8,000 and 30,000 images respectively as well as the more challenging Microsoft COCO dataset which has 82,783 images. The Flickr8k/Flickr30k dataset both come with 5 reference sentences per image, but for the MS COCO dataset, some of the images have references in excess of 5 which for consistency across our datasets we discard. We applied only basic tokenization to MS COCO so that it is consistent with the tokenization present in Flickr8k and Flickr30k. For all our experiments, we used a fixed vocabulary size of 10,000.
Results for our attention-based architecture are reported in Table 4.2.1. We report results with the frequently used BLEU metric2 which is the standard in the caption generation literature. We report BLEU from 1 to 4 with-
2We verified that our BLEU evaluation code matches the authors of Vinyals et al. (2014), Karpathy & Li (2014) and Kiros et al. (2014b). For fairness, we only compare against results for which we have verified that our BLEU evaluation code is the same. With the upcoming release of the COCO evaluation server, we will include comparison results with all other recent image captioning models.

out a brevity penalty. There has been, however, criticism of BLEU, so in addition we report another common metric METEOR (Denkowski & Lavie, 2014), and compare whenever possible.
5.2. Evaluation Procedures
A few challenges exist for comparison, which we explain here. The first is a difference in choice of convolutional feature extractor. For identical decoder architectures, using more recent architectures such as GoogLeNet or Oxford VGG Szegedy et al. (2014), Simonyan & Zisserman (2014) can give a boost in performance over using the AlexNet (Krizhevsky et al., 2012). In our evaluation, we compare directly only with results which use the comparable GoogLeNet/Oxford VGG features, but for METEOR comparison we note some results that use AlexNet.
The second challenge is a single model versus ensemble comparison. While other methods have reported performance boosts by using ensembling, in our results we report a single model performance.
Finally, there is challenge due to differences between dataset splits. In our reported results, we use the predefined splits of Flickr8k. However, one challenge for the Flickr30k and COCO datasets is the lack of standardized splits. As a result, we report with the publicly available splits3 used in previous work (Karpathy & Li, 2014). In our experience, differences in splits do not make a substantial difference in overall performance, but we note the differ-
3http://cs.stanford.edu/people/karpathy/ deepimagesent/

Neural Image Caption Generation with Visual Attention

ences where they exist.
5.3. Quantitative Analysis
In Table 4.2.1, we provide a summary of the experiment validating the quantitative effectiveness of attention. We obtain state of the art performance on the Flickr8k, Flickr30k and MS COCO. In addition, we note that in our experiments we are able to significantly improve the state of the art performance METEOR on MS COCO that we speculate is connected to some of the regularization techniques we used 4.2.1 and our lower level representation. Finally, we also note that we are able to obtain this performance using a single model without an ensemble.
5.4. Qualitative Analysis: Learning to attend
By visualizing the attention component learned by the model, we are able to add an extra layer of interpretability to the output of the model (see Fig. 1). Other systems that have done this rely on object detection systems to produce candidate alignment targets (Karpathy & Li, 2014). Our approach is much more flexible, since the model can attend to "non object" salient regions.
The 19-layer OxfordNet uses stacks of 3x3 filters meaning the only time the feature maps decrease in size are due to the max pooling layers. The input image is resized so that the shortest side is 256 dimensional with preserved aspect ratio. The input to the convolutional network is the center cropped 224x224 image. Consequently, with 4 max pooling layers we get an output dimension of the top convolutional layer of 14x14. Thus in order to visualize the attention weights for the soft model, we simply upsample the weights by a factor of 24 = 16 and apply a Gaussian filter. We note that the receptive fields of each of the 14x14 units are highly overlapping.
As we can see in Figure 2 and 3, the model learns alignments that correspond very strongly with human intuition. Especially in the examples of mistakes, we see that it is possible to exploit such visualizations to get an intuition as to why those mistakes were made. We provide a more extensive list of visualizations in Appendix A for the reader.
6. Conclusion
We propose an attention based approach that gives state of the art performance on three benchmark datasets using the BLEU and METEOR metric. We also show how the learned attention can be exploited to give more interpretability into the models generation process, and demonstrate that the learned alignments correspond very well to human intuition. We hope that the results of this paper will encourage future work in using visual attention. We also expect that the modularity of the encoder-decoder approach

combined with attention to have useful applications in other domains.
Acknowledgments
The authors would like to thank the developers of Theano (Bergstra et al., 2010; Bastien et al., 2012). We acknowledge the support of the following organizations for research funding and computing support: the Nuance Foundation, NSERC, Samsung, Calcul Que´bec, Compute Canada, the Canada Research Chairs and CIFAR. The authors would also like to thank Nitish Srivastava for assistance with his ConvNet package as well as preparing the Oxford convolutional network and Relu Patrascu for helping with numerous infrastructure related problems.
References
Ba, Jimmy Lei, Mnih, Volodymyr, and Kavukcuoglu, Koray. Multiple object recognition with visual attention. arXiv:1412.7755, December 2014.
Bahdanau, Dzmitry, Cho, Kyunghyun, and Bengio, Yoshua. Neural machine translation by jointly learning to align and translate. arXiv:1409.0473, September 2014.
Baldi, Pierre and Sadowski, Peter. The dropout learning algorithm. Artificial intelligence, 210:78­122, 2014.
Bastien, Frederic, Lamblin, Pascal, Pascanu, Razvan, Bergstra, James, Goodfellow, Ian, Bergeron, Arnaud, Bouchard, Nicolas, Warde-Farley, David, and Bengio, Yoshua. Theano: new features and speed improvements. Submited to the Deep Learning and Unsupervised Feature Learning NIPS 2012 Workshop, 2012.
Bergstra, James, Breuleux, Olivier, Bastien, Fre´de´ric, Lamblin, Pascal, Pascanu, Razvan, Desjardins, Guillaume, Turian, Joseph, Warde-Farley, David, and Bengio, Yoshua. Theano: a CPU and GPU math expression compiler. In Proceedings of the Python for Scientific Computing Conference (SciPy), 2010.
Chen, Xinlei and Zitnick, C Lawrence. Learning a recurrent visual representation for image caption generation. arXiv preprint arXiv:1411.5654, 2014.
Cho, Kyunghyun, van Merrienboer, Bart, Gulcehre, Caglar, Bougares, Fethi, Schwenk, Holger, and Bengio, Yoshua. Learning phrase representations using RNN encoder-decoder for statistical machine translation. In EMNLP, October 2014.
Corbetta, Maurizio and Shulman, Gordon L. Control of goaldirected and stimulus-driven attention in the brain. Nature reviews neuroscience, 3(3):201­215, 2002.
Denil, Misha, Bazzani, Loris, Larochelle, Hugo, and de Freitas, Nando. Learning where to attend with deep architectures for image tracking. Neural Computation, 2012.
Denkowski, Michael and Lavie, Alon. Meteor universal: Language specific translation evaluation for any target language. In Proceedings of the EACL 2014 Workshop on Statistical Machine Translation, 2014.

Neural Image Caption Generation with Visual Attention

Donahue, Jeff, Hendrikcs, Lisa Anne, Guadarrama, Segio, Rohrbach, Marcus, Venugopalan, Subhashini, Saenko, Kate, and Darrell, Trevor. Long-term recurrent convolutional networks for visual recognition and description. arXiv:1411.4389v2, November 2014.
Elliott, Desmond and Keller, Frank. Image description using visual dependency representations. In EMNLP, 2013.
Fang, Hao, Gupta, Saurabh, Iandola, Forrest, Srivastava, Rupesh, Deng, Li, Dolla´r, Piotr, Gao, Jianfeng, He, Xiaodong, Mitchell, Margaret, Platt, John, et al. From captions to visual concepts and back. arXiv:1411.4952, November 2014.
Hochreiter, S. and Schmidhuber, J. Long short-term memory. Neural Computation, 9(8):1735­1780, 1997.
Hodosh, Micah, Young, Peter, and Hockenmaier, Julia. Framing image description as a ranking task: Data, models and evaluation metrics. Journal of Artificial Intelligence Research, pp. 853­899, 2013.
Karpathy, Andrej and Li, Fei-Fei. Deep visual-semantic alignments for generating image descriptions. arXiv:1412.2306, December 2014.
Kingma, Diederik P. and Ba, Jimmy. Adam: A Method for Stochastic Optimization. arXiv:1412.6980, December 2014.
Kiros, Ryan, Salahutdinov, Ruslan, and Zemel, Richard. Multimodal neural language models. In International Conference on Machine Learning, pp. 595­603, 2014a.
Kiros, Ryan, Salakhutdinov, Ruslan, and Zemel, Richard. Unifying visual-semantic embeddings with multimodal neural language models. arXiv:1411.2539, November 2014b.
Krizhevsky, Alex, Sutskever, Ilya, and Hinton, Geoffrey. ImageNet classification with deep convolutional neural networks. In NIPS. 2012.
Kulkarni, Girish, Premraj, Visruth, Ordonez, Vicente, Dhar, Sagnik, Li, Siming, Choi, Yejin, Berg, Alexander C, and Berg, Tamara L. Babytalk: Understanding and generating simple image descriptions. PAMI, IEEE Transactions on, 35(12):2891­ 2903, 2013.
Kuznetsova, Polina, Ordonez, Vicente, Berg, Alexander C, Berg, Tamara L, and Choi, Yejin. Collective generation of natural image descriptions. In Association for Computational Linguistics. ACL, 2012.
Kuznetsova, Polina, Ordonez, Vicente, Berg, Tamara L, and Choi, Yejin. Treetalk: Composition and compression of trees for image descriptions. TACL, 2(10):351­362, 2014.
Larochelle, Hugo and Hinton, Geoffrey E. Learning to combine foveal glimpses with a third-order boltzmann machine. In NIPS, pp. 1243­1251, 2010.
Li, Siming, Kulkarni, Girish, Berg, Tamara L, Berg, Alexander C, and Choi, Yejin. Composing simple image descriptions using web-scale n-grams. In Computational Natural Language Learning. ACL, 2011.

Lin, Tsung-Yi, Maire, Michael, Belongie, Serge, Hays, James, Perona, Pietro, Ramanan, Deva, Dolla´r, Piotr, and Zitnick, C Lawrence. Microsoft coco: Common objects in context. In ECCV, pp. 740­755. 2014.
Mao, Junhua, Xu, Wei, Yang, Yi, Wang, Jiang, and Yuille, Alan. Deep captioning with multimodal recurrent neural networks (m-rnn). arXiv:1412.6632, December 2014.
Mitchell, Margaret, Han, Xufeng, Dodge, Jesse, Mensch, Alyssa, Goyal, Amit, Berg, Alex, Yamaguchi, Kota, Berg, Tamara, Stratos, Karl, and Daume´ III, Hal. Midge: Generating image descriptions from computer vision detections. In European Chapter of the Association for Computational Linguistics, pp. 747­756. ACL, 2012.
Mnih, Volodymyr, Hees, Nicolas, Graves, Alex, and Kavukcuoglu, Koray. Recurrent models of visual attention. In NIPS, 2014.
Pascanu, Razvan, Gulcehre, Caglar, Cho, Kyunghyun, and Bengio, Yoshua. How to construct deep recurrent neural networks. In ICLR, 2014.
Rensink, Ronald A. The dynamic representation of scenes. Visual cognition, 7(1-3):17­42, 2000.
Russakovsky, Olga, Deng, Jia, Su, Hao, Krause, Jonathan, Satheesh, Sanjeev, Ma, Sean, Huang, Zhiheng, Karpathy, Andrej, Khosla, Aditya, Bernstein, Michael, Berg, Alexander C., and Fei-Fei, Li. ImageNet Large Scale Visual Recognition Challenge, 2014.
Simonyan, K. and Zisserman, A. Very deep convolutional networks for large-scale image recognition. CoRR, abs/1409.1556, 2014.
Snoek, Jasper, Larochelle, Hugo, and Adams, Ryan P. Practical bayesian optimization of machine learning algorithms. In NIPS, pp. 2951­2959, 2012.
Snoek, Jasper, Swersky, Kevin, Zemel, Richard S, and Adams, Ryan P. Input warping for bayesian optimization of nonstationary functions. arXiv preprint arXiv:1402.0929, 2014.
Srivastava, Nitish, Hinton, Geoffrey, Krizhevsky, Alex, Sutskever, Ilya, and Salakhutdinov, Ruslan. Dropout: A simple way to prevent neural networks from overfitting. JMLR, 15, 2014.
Sutskever, Ilya, Vinyals, Oriol, and Le, Quoc VV. Sequence to sequence learning with neural networks. In NIPS, pp. 3104­ 3112, 2014.
Szegedy, Christian, Liu, Wei, Jia, Yangqing, Sermanet, Pierre, Reed, Scott, Anguelov, Dragomir, Erhan, Dumitru, Vanhoucke, Vincent, and Rabinovich, Andrew. Going deeper with convolutions. arXiv preprint arXiv:1409.4842, 2014.
Tang, Yichuan, Srivastava, Nitish, and Salakhutdinov, Ruslan R. Learning generative models with visual attention. In NIPS, pp. 1808­1816, 2014.
Tieleman, Tijmen and Hinton, Geoffrey. Lecture 6.5 - rmsprop. Technical report, 2012.
Vinyals, Oriol, Toshev, Alexander, Bengio, Samy, and Erhan, Dumitru. Show and tell: A neural image caption generator. arXiv:1411.4555, November 2014.

Neural Image Caption Generation with Visual Attention
Weaver, Lex and Tao, Nigel. The optimal reward baseline for gradient-based reinforcement learning. In Proc. UAI'2001, pp. 538­545, 2001.
Williams, Ronald J. Simple statistical gradient-following algorithms for connectionist reinforcement learning. Machine learning, 8(3-4):229­256, 1992.
Yang, Yezhou, Teo, Ching Lik, Daume´ III, Hal, and Aloimonos, Yiannis. Corpus-guided sentence generation of natural images. In EMNLP, pp. 444­454. ACL, 2011.
Young, Peter, Lai, Alice, Hodosh, Micah, and Hockenmaier, Julia. From image descriptions to visual denotations: New similarity metrics for semantic inference over event descriptions. TACL, 2:67­78, 2014.
Zaremba, Wojciech, Sutskever, Ilya, and Vinyals, Oriol. Recurrent neural network regularization. arXiv preprint arXiv:1409.2329, September 2014.

Neural Image Caption Generation with Visual Attention
A. Appendix
Visualizations from our "hard" (a) and "soft" (b) attention model. White indicates the regions where the model roughly attends to (see section 5.4).

A

man

and

a

woman

playing

frisbee

in

a

field

.

(a) A man and a woman playing frisbee in a field.

(b) A woman is throwing a frisbee in a park. Figure 6.

Neural Image Caption Generation with Visual Attention

A

giraffe

standing

in

a

field

with

trees

.

(a) A giraffe standing in the field with trees.

(b) A large white bird standing in a forest. Figure 7.

Neural Image Caption Generation with Visual Attention

A

dog

is

laying

on

a

bed

with

a

book

.

(a) A dog is laying on a bed with a book.

(b) A dog is standing on a hardwood floor. Figure 8.

Neural Image Caption Generation with Visual Attention

A

woman

is

holding

a

donut

in

his

hand

.

(a) A woman is holding a donut in his hand.

(b) A woman holding a clock in her hand. Figure 9.

Neural Image Caption Generation with Visual Attention

A

stop

sign

with

a

stop

sign

on

it

.

(a) A stop sign with a stop sign on it.

(b) A stop sign is on a road with a mountain in the background. Figure 10.

Neural Image Caption Generation with Visual Attention

A

man

in

a

suit

and

a

hat

holding

a

remote

control

.

(a) A man in a suit and a hat holding a remote control.

(b) A man wearing a hat and a hat on a skateboard. Figure 11.

Neural Image Caption Generation with Visual Attention

A

little

girl

sitting

on

a

couch

with

a

teddy

bear

.

(a) A little girl sitting on a couch with a teddy bear.

(b) A little girl sitting on a bed with a teddy bear.

Neural Image Caption Generation with Visual Attention

A

man

is

standing

on

a

beach

with

a

surfboard

.

(a) A man is standing on a beach with a surfboard.

(b) A person is standing on a beach with a surfboard.

Neural Image Caption Generation with Visual Attention

A

man

and

a

woman

riding

a

boat

in

the

water

.

(a) A man and a woman riding a boat in the water.

(b) A group of people sitting on a boat in the water. Figure 12.

Neural Image Caption Generation with Visual Attention

A

man

is

standing

in

a

market

with

a

large

amount

of

food

.

(a) A man is standing in a market with a large amount of food.

(b) A woman is sitting at a table with a large pizza. Figure 13.

Neural Image Caption Generation with Visual Attention

A

giraffe

standing

in

a

field

with

trees

.

(a) A giraffe standing in a field with trees.

(b) A giraffe standing in a forest with trees in the background. Figure 14.

Neural Image Caption Generation with Visual Attention

A

group

of

people

standing

next

to

each

other

.

(a) A group of people standing next to each other.

(b) A man is talking on his cell phone while another man watches. Figure 15.

